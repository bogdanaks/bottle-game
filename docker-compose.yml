version: '3.9'
services:
  database:
    container_name: database
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=bottlegame
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - redis
    healthcheck: 
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network
  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - app_network
  client:
    container_name: client
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    volumes:
      - "./frontend-react:/app"
      - "/app/node_modules"
    environment:
      - REACT_APP_API_URL=https://bogdanaks.ru
      - REACT_APP_TEST_MODE=true
    networks:
      - app_network
  backend:
    container_name: backend
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - "./backend:/app"
      - "/app/node_modules"
    environment:
      - PORT=5000
      - DB_USER=postgres
      - DB_HOST=database
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_NAME=bottlegame
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - TG_TOKEN=6034582865:AAGjXj3BtDq2ynfHfsC_mmIyYD34j7364KU
    ports:
      - "5000:5000"
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
